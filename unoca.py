from .. import loader, utils
import asyncio 
from asyncio import sleep

__version__ = (1, 0, 0)

class unoca(loader.Module):
    '''–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤ –≤ MineEVO\nDeveloper: @shx_modules'''

    strings = {
        'name':'unoca'
    }
    
    async def client_ready(self):
        self.set('opst', False)
    @loader.command()
    async def usetgroup(self, message):
        ''' - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤'''
        if message.is_private:

            await message.edit("<emoji document_id=5210952531676504517>üö´</emoji> | –≠—Ç–æ –Ω–µ –≥—Ä—É–ø–ø–∞.")
            return
        
        args = utils.get_args_raw(message)
        to_chat = None

        try:

            if args:

                to_chat = int(args) if args.isdigit() else args

            else:

                to_chat = message.chat_id

        except ValueError:

            to_chat = message.chat_id
        chat = await message.client.get_entity(to_chat)
        chat = f'-100{chat.id}'
        chat = int(chat)
        self.set('group', chat)
        await utils.answer(message, f"<emoji document_id=5332533929020761310>‚úÖ</emoji> | –ì—Ä—É–ø–ø–∞ <code>{chat}</code> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∫–∞–∫ —á–∞—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤.")

    @loader.command()
    async def usettings(self, message):
        ''' - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è'''
        args = utils.get_args_raw(message)
        prefix = utils.escape_html(self.get_prefix())
        if not args:

            mylimit = self.get('mylimit')
            sleeptime = self.get('sleeptime')

            await utils.answer(message, f'<emoji document_id=5328239124933515868>‚öôÔ∏è</emoji> | <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥—É–ª—è unoca:</b>\n\n<code>{prefix}usettings s1</code> [ –õ–∏–º–∏—Ç ] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤ –∑–∞ —Ä–∞–∑.\n   –¢–µ–∫—É—â–∏–π: {mylimit}\n<code>{prefix}usettings s2</code> [ –°–µ–∫—É–Ω–¥—ã ] - —É–∫–∞–∑–∞—Ç—å, —Ä–∞–∑ –≤ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–µ–π—Å—ã.\n   –¢–µ–∫—É—â–∏–π: {sleeptime}')
            return
        if args:

            if ' ' in args:

                args = args.split()
                if args[0] == 's1':

                    limit = int(args[1])
                    self.set('mylimit', limit)
                    await utils.answer(message, f'<emoji document_id=5332533929020761310>‚úÖ</emoji> | –ü–∞—Ä–∞–º–µ—Ç—Ä limit –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ <code>{limit}</code>.')
                    return
                if args[0] == 's2':

                    sleeptime = int(args[1])
                    self.set('sleeptime', sleeptime)
                    await utils.answer(message, f'<emoji document_id=5332533929020761310>‚úÖ</emoji> | –ü–∞—Ä–∞–º–µ—Ç—Ä sleeptime –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ <code>{sleeptime}</code>.')
                    return

    @loader.command()
    async def uoc(self, message):
        '''[ –¢–∏–ø ] [ –ö–æ–ª-–≤–æ ] - –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–æ–≤'''
        args = utils.get_args_raw(message)
        prefix = utils.escape_html(self.get_prefix())
        if not args:

            await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–ß—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å? –¢—ã –±—ã —Ö–æ—Ç—å –Ω–∞–ø–∏—Å–∞–ª, –≤–æ—Ç, –ø–æ–ø—Ä–æ–±—É–π: <code>{prefix}uoc —Ä–∫—Ç 20</code>')
            return
        elif args:

            opst = self.get('opst')
            args = args.lower()
            if ' ' in args:

                args = args.split()
                if len(args) == 2:

                    if args[0] in ['–∫—Ç','—Ä–∫—Ç','–∫','—Ä–∫','–º–∏—Ñ','–∫—Ä','–∑–≤']:

                        if args[1].isdigit():

                            if opst == False:
                                val = int(args[1])
                                textval = val
                                await utils.answer(message, f'<emoji document_id=5332533929020761310>‚úÖ</emoji> | –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–æ–≤ –Ω–∞—á–∞–ª–æ—Å—å.\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å <code>{textval}</code> {args[0]}')
                                limit = self.get('mylimit')
                                if val > limit:
                                    sleeptime = self.get('sleeptime')
                                    gval = val/limit
                                    gval = int(gval)
                                    tval = val%limit
                                    self.set('opst', True)
                                    await asyncio.sleep(sleeptime)
                                    while gval > 0:

                                        
                                        chat = self.get('group')
                                        await self.client.send_message(chat, f'–û—Ç–∫ {args[0]} {limit}')
                                        gval -= 1
                                        textval -= limit
                                        await utils.answer(message, f'<emoji document_id=5332533929020761310>‚úÖ</emoji> | –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–æ–≤ –Ω–∞—á–∞–ª–æ—Å—å.\n–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å <code>{textval}</code> {args[0]}')
                                        await asyncio.sleep(sleeptime)
                                    await self.client.send_message(chat, f'–û—Ç–∫ {args[0]} {tval}')
                                    await utils.answer(message, f'<emoji document_id=5332533929020761310>‚úÖ</emoji> | –í—Å–µ {val} {args[0]} –æ—Ç–∫—Ä—ã—Ç—ã.')
                                    self.set('opst', False)
                                    return
                                else:
                                    await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–≠–π, —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å {val} {args[0]}, –∫–æ–≥–¥–∞ —Ç–≤–æ–π –ª–∏–º–∏—Ç {limit}? –ü–æ–¥–Ω–∏–º–∏ —Å–≤–æ—é –∑–∞–¥–Ω–∏—Ü—É –∏ –æ—Ç–∫—Ä–æ–π –∫–µ–π—Å—ã –≤—Ä—É—á–Ω—É—é, —è —á—Ç–æ, –¥–æ–ª–∂–µ–Ω –≤—Å–µ –¥–µ–ª–∞—Ç—å –∑–∞ —Ç–µ–±—è?')
                            else:
                                await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–ú—ã –ø—ã—Ç–∞–ª–∏—Å—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–µ–π—Å—ã, –Ω–æ... –û–Ω–∏ —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è. –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')
                                return
                        else:
                            await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–Ø —Ö–æ—Ç–µ–ª —É–∂–µ –Ω–∞—á–∞—Ç—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–µ–π—Å—ã, –Ω–æ... –¢—ã –≤ –∫–æ–ª-–≤–æ —É–∫–∞–∑–∞–ª –Ω–µ —Ü–∏—Ñ—Ä—ã, –∫–∞–∫ –º–Ω–µ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç—ã –æ—Ç –º–µ–Ω—è —Ö–æ—á–µ—à—å, –¥—Ä—É–≥? –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å <code>{prefix}uoc —Ä–∫—Ç 20</code>, —Ç–æ–≥–¥–∞ —è –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω—é —ç—Ç–æ.')
                            return
                    else:
                        await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–û—Ç–∫—Ä—ã–≤–∞—Ç—å —á—Ç–æ? {args[0]}? –≠—Ç–æ —á—Ç–æ –≤–æ–æ–±—â–µ? –ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –≥–æ—Ç–æ–≤ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ <code>–∫—Ç, —Ä–∫—Ç, –∫, —Ä–∫, –º–∏—Ñ, –∫—Ä, –∑–≤...</code>')
                        return
                else:
                    await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–°–∫–æ–ª—å–∫–æ-—Å–∫–æ–ª—å–∫–æ? –≠—ç—ç, –∫—É–¥–∞ —Å—Ç–æ–ª—å–∫–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –º–Ω–µ –≤—Å–µ–≥–æ 2 –Ω–∞–¥–æ...')
                    return
            else:
                await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–ù—É –∫–∞–º–æ–Ω... –î—Ä—É–≥... –í–æ—Ç —Ç—ã –Ω–∞–ø–∏—Å–∞–ª –º–Ω–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –∫–∞–∫ —è –¥–æ–ª–∂–µ–Ω –ø–æ–Ω—è—Ç—å, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç –º–µ–Ω—è? –í–æ—Ç, –ø–æ–ø—Ä–æ–±—É–π: <code>{prefix}uoc —Ä–∫—Ç 20</code>')
                return
        

                    
# await utils.answer(message, f'<emoji document_id=5877477244938489129>üö´</emoji> <b>Error |</b> <code>{prefix}uoc</code>\n–í—ã —É–∫–∞–∑–∞–ª–∏ –±–æ–ª—å—à–µ –¥–≤—É—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —Ö–æ—Ç—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞—Å—á–∏—Ç–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.')
#                     return